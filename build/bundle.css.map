{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "App.svelte"
  ],
  "sourcesContent": [
    "<script>\n  // import {videoStream} from './store.js'\n\n  /**\n   * @type {MediaStream}\n   */\n  var videothing;\n  let video = document.createElement('video');\n  let data;\n  /**\n   * @type {number}\n   */\n  let target_x;\n  /**\n   * @type {number}\n   */\n  let target_y;\n  let canvas;\n  /**\n   * @type {CanvasRenderingContext2D| null}\n   */\n  let ctx;\n  /**\n   * @type {ImageData}\n   */\n  let pixel;\n  /**\n   * @param {HTMLVideoElement} videoObject\n   */\n\n  const mediaStream = window.navigator.mediaDevices\n    .getUserMedia({ video: { facingMode: 'environment' }, audio: false })\n    .then((videoStream) => {\n      // yay we can now assign srcObject to videoStream\n      if (video !== null) {\n        video.srcObject = videoStream;\n      }\n    })\n    .catch((e) => {\n      // tell the user something went wrong, e has the reason for why it failed\n      console.error('something is wrong :c', e);\n    });\n  // let video = document.createElement('video');\n\n  setInterval(() => {\n    target_x = video.videoWidth / 2;\n    target_y = video.videoHeight / 2;\n    canvas = document.createElement('canvas');\n    console.log('video width here', video.videoWidth);\n    canvas.width = video.videoWidth;\n    canvas.height = video.videoHeight;\n    ctx = canvas.getContext('2d');\n    console.log(canvas.width);\n    if (ctx) {\n      ctx.drawImage(video, 0, 0);\n      data = ctx.getImageData(0, 0, video.videoWidth, video.videoHeight);\n      console.log(target_x, target_y);\n\n      pixel = ctx.getImageData(target_x, target_y, 1, 1);\n\n      let changeObject = document.getElementById('change');\n      let complimentObject = document.getElementById('compliment');\n      let c2 = document.getElementById('c2');\n\n      if (changeObject && complimentObject && c2) {\n        changeObject.style.background = 'rgba(' + pixel.data + ')';\n        complimentObject.style.color =\n          'rgba(' + getComplimentColor(pixel).data + ')';\n        c2.style.border =\n          'rgba(' + getComplimentColor(pixel).data + ') solid 4px';\n      }\n    }\n  }, 100);\n\n  /**\n   * @param {any} input\n   * takes in a pixel\n   */\n  function getComplimentColor(input) {\n    let r = input.data[0];\n    let g = input.data[1];\n    let b = input.data[2];\n    const pixelarray = new Uint8ClampedArray([\n      255 - r,\n      255 - g,\n      255 - b,\n      input.data[3],\n    ]);\n    let cc = new ImageData(pixelarray, 1, 1);\n    return cc;\n  }\n\n  //  console.log(video.videoWidth, video.videoHeight);\n</script>\n\n<main id=\"change\">\n  <div id=\"compliment\">\n    <h1>Seyan</h1>\n  </div>\n\n  <!-- svelte-ignore a11y-media-has-caption -->\n  <div class=\"parent\">\n    <video autoplay bind:this={video} playsinline />\n    <div id=\"c2\" class=\"aimline\" />\n  </div>\n  <p>\n    <span style=\"background-color:#FF0000;color:white\"\n      >{pixel?.data[0].toString()}</span\n    >\n    <span style=\"background-color:#00FF00\">{pixel?.data[1].toString()}</span>\n    <span style=\"background-color:#0000FF;color:white\"\n      >{pixel?.data[2].toString()}</span\n    >\n  </p>\n</main>\n\n<style>\n  main {\n    text-align: center;\n    padding: 1em;\n    max-width: 100vw;\n    margin: 0 auto;\n    background: black;\n    height: 100vh;\n  }\n\n  h1 {\n    text-transform: uppercase;\n    display: inline;\n    font-size: 3em;\n    font-weight: 100;\n    font-family: 'Monoton', cursive;\n    background-image: linear-gradient(\n      to right,\n      red,\n      orange,\n      yellow,\n      green,\n      cyan,\n      blue,\n      purple\n    );\n    -webkit-background-clip: text;\n    -webkit-text-fill-color: transparent;\n  }\n  span {\n    font-family: 'Space Mono', monospace;\n    font-size: 3em;\n    margin: 1em;\n  }\n  @media screen and (max-width: 600px) {\n    span {\n      margin: 0.5em;\n    }\n  }\n  video {\n    max-width: 100%;\n  }\n\n  @media (min-width: 640px) {\n    main {\n      max-width: none;\n    }\n  }\n  .parent {\n    position: relative;\n  }\n  .aimline {\n    width: 5px;\n    height: 5px;\n    border: 4px black solid;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    margin: 0 auto;\n    vertical-align: auto;\n    transform: translate(-7px, -7px);\n  }\n</style>\n"
  ],
  "names": [],
  "mappings": "AAqHE,IAAI,eAAC,CAAC,AACJ,UAAU,CAAE,MAAM,CAClB,OAAO,CAAE,GAAG,CACZ,SAAS,CAAE,KAAK,CAChB,MAAM,CAAE,CAAC,CAAC,IAAI,CACd,UAAU,CAAE,KAAK,CACjB,MAAM,CAAE,KAAK,AACf,CAAC,AAED,EAAE,eAAC,CAAC,AACF,cAAc,CAAE,SAAS,CACzB,OAAO,CAAE,MAAM,CACf,SAAS,CAAE,GAAG,CACd,WAAW,CAAE,GAAG,CAChB,WAAW,CAAE,SAAS,CAAC,CAAC,OAAO,CAC/B,gBAAgB,CAAE;MAChB,EAAE,CAAC,KAAK,CAAC;MACT,GAAG,CAAC;MACJ,MAAM,CAAC;MACP,MAAM,CAAC;MACP,KAAK,CAAC;MACN,IAAI,CAAC;MACL,IAAI,CAAC;MACL,MAAM;KACP,CACD,uBAAuB,CAAE,IAAI,CAC7B,uBAAuB,CAAE,WAAW,AACtC,CAAC,AACD,IAAI,eAAC,CAAC,AACJ,WAAW,CAAE,YAAY,CAAC,CAAC,SAAS,CACpC,SAAS,CAAE,GAAG,CACd,MAAM,CAAE,GAAG,AACb,CAAC,AACD,OAAO,MAAM,CAAC,GAAG,CAAC,YAAY,KAAK,CAAC,AAAC,CAAC,AACpC,IAAI,eAAC,CAAC,AACJ,MAAM,CAAE,KAAK,AACf,CAAC,AACH,CAAC,AACD,KAAK,eAAC,CAAC,AACL,SAAS,CAAE,IAAI,AACjB,CAAC,AAED,MAAM,AAAC,YAAY,KAAK,CAAC,AAAC,CAAC,AACzB,IAAI,eAAC,CAAC,AACJ,SAAS,CAAE,IAAI,AACjB,CAAC,AACH,CAAC,AACD,OAAO,eAAC,CAAC,AACP,QAAQ,CAAE,QAAQ,AACpB,CAAC,AACD,QAAQ,eAAC,CAAC,AACR,KAAK,CAAE,GAAG,CACV,MAAM,CAAE,GAAG,CACX,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,KAAK,CACvB,QAAQ,CAAE,QAAQ,CAClB,GAAG,CAAE,GAAG,CACR,IAAI,CAAE,GAAG,CACT,MAAM,CAAE,CAAC,CAAC,IAAI,CACd,cAAc,CAAE,IAAI,CACpB,SAAS,CAAE,UAAU,IAAI,CAAC,CAAC,IAAI,CAAC,AAClC,CAAC"
}